{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PULSE Electronics\\\\protecht\\\\src\\\\pages\\\\ImageCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"../styles_css/Carousel.css\"; // Add custom styles for carousel\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCarousel = ({\n  images\n}) => {\n  _s();\n  const carouselRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n\n  // Clone the images array 5 times for seamless infinite scrolling\n  const infiniteImages = Array(5).fill(images).flat();\n  useEffect(() => {\n    const carousel = carouselRef.current;\n    const handleScroll = () => {\n      const totalScrollWidth = carousel.scrollWidth; // Total width of the content\n      const visibleWidth = carousel.offsetWidth; // Width of the visible area\n      const segmentScrollWidth = totalScrollWidth / 5; // Since we duplicated the images 5 times\n\n      console.log(\"Scroll Position:\", carousel.scrollLeft);\n\n      // Reset to the middle of the cloned images when reaching the end\n      if (carousel.scrollLeft >= totalScrollWidth - visibleWidth) {\n        console.log(\"Reached the end, resetting to the middle...\");\n        carousel.scrollLeft = carousel.scrollLeft - segmentScrollWidth;\n      }\n\n      // Reset to the middle of the cloned images when reaching the start\n      if (carousel.scrollLeft <= 0) {\n        console.log(\"Reached the start, resetting to the middle...\");\n        carousel.scrollLeft = carousel.scrollLeft + segmentScrollWidth;\n      }\n    };\n    carousel.addEventListener(\"scroll\", handleScroll);\n\n    // Start carousel in the middle of the cloned images\n    carousel.scrollLeft = carousel.scrollWidth / 5;\n    console.log(\"Initial Scroll Position:\", carousel.scrollLeft);\n    return () => {\n      carousel.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setStartX(e.pageX - carouselRef.current.offsetLeft);\n    setScrollLeft(carouselRef.current.scrollLeft);\n    console.log(\"Mouse Down:\", {\n      startX: e.pageX,\n      scrollLeft: carouselRef.current.scrollLeft\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n    e.preventDefault();\n    const x = e.pageX - carouselRef.current.offsetLeft;\n    const walk = x - startX; // Distance dragged\n    carouselRef.current.scrollLeft = scrollLeft - walk;\n    console.log(\"Dragging:\", {\n      currentX: x,\n      walk,\n      newScrollLeft: carouselRef.current.scrollLeft\n    });\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    console.log(\"Mouse Up, dragging stopped\");\n  };\n  const handleMouseLeave = () => {\n    setIsDragging(false);\n    console.log(\"Mouse Left, dragging stopped\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    ref: carouselRef,\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    children: infiniteImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-item\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: `Slide ${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageCarousel, \"W2SxOmRav8QMbADnXjot+HoUqu0=\");\n_c = ImageCarousel;\nexport default ImageCarousel;\nvar _c;\n$RefreshReg$(_c, \"ImageCarousel\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ImageCarousel","images","_s","carouselRef","isDragging","setIsDragging","startX","setStartX","scrollLeft","setScrollLeft","infiniteImages","Array","fill","flat","carousel","current","handleScroll","totalScrollWidth","scrollWidth","visibleWidth","offsetWidth","segmentScrollWidth","console","log","addEventListener","removeEventListener","handleMouseDown","e","pageX","offsetLeft","handleMouseMove","preventDefault","x","walk","currentX","newScrollLeft","handleMouseUp","handleMouseLeave","className","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","children","map","img","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PULSE Electronics/protecht/src/pages/ImageCarousel.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../styles_css/Carousel.css\"; // Add custom styles for carousel\r\n\r\nconst ImageCarousel = ({ images }) => {\r\n  const carouselRef = useRef(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [startX, setStartX] = useState(0);\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n\r\n  // Clone the images array 5 times for seamless infinite scrolling\r\n  const infiniteImages = Array(5).fill(images).flat();\r\n\r\n  useEffect(() => {\r\n    const carousel = carouselRef.current;\r\n\r\n    const handleScroll = () => {\r\n      const totalScrollWidth = carousel.scrollWidth; // Total width of the content\r\n      const visibleWidth = carousel.offsetWidth; // Width of the visible area\r\n      const segmentScrollWidth = totalScrollWidth / 5; // Since we duplicated the images 5 times\r\n\r\n      console.log(\"Scroll Position:\", carousel.scrollLeft);\r\n\r\n      // Reset to the middle of the cloned images when reaching the end\r\n      if (carousel.scrollLeft >= totalScrollWidth - visibleWidth) {\r\n        console.log(\"Reached the end, resetting to the middle...\");\r\n        carousel.scrollLeft = carousel.scrollLeft - segmentScrollWidth;\r\n      }\r\n\r\n      // Reset to the middle of the cloned images when reaching the start\r\n      if (carousel.scrollLeft <= 0) {\r\n        console.log(\"Reached the start, resetting to the middle...\");\r\n        carousel.scrollLeft = carousel.scrollLeft + segmentScrollWidth;\r\n      }\r\n    };\r\n\r\n    carousel.addEventListener(\"scroll\", handleScroll);\r\n\r\n    // Start carousel in the middle of the cloned images\r\n    carousel.scrollLeft = carousel.scrollWidth / 5;\r\n\r\n    console.log(\"Initial Scroll Position:\", carousel.scrollLeft);\r\n\r\n    return () => {\r\n      carousel.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleMouseDown = (e) => {\r\n    setIsDragging(true);\r\n    setStartX(e.pageX - carouselRef.current.offsetLeft);\r\n    setScrollLeft(carouselRef.current.scrollLeft);\r\n    console.log(\"Mouse Down:\", {\r\n      startX: e.pageX,\r\n      scrollLeft: carouselRef.current.scrollLeft,\r\n    });\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDragging) return;\r\n    e.preventDefault();\r\n    const x = e.pageX - carouselRef.current.offsetLeft;\r\n    const walk = x - startX; // Distance dragged\r\n    carouselRef.current.scrollLeft = scrollLeft - walk;\r\n    console.log(\"Dragging:\", {\r\n      currentX: x,\r\n      walk,\r\n      newScrollLeft: carouselRef.current.scrollLeft,\r\n    });\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n    console.log(\"Mouse Up, dragging stopped\");\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsDragging(false);\r\n    console.log(\"Mouse Left, dragging stopped\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"carousel\"\r\n      ref={carouselRef}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      {infiniteImages.map((img, index) => (\r\n        <div className=\"carousel-item\" key={index}>\r\n          <img src={img} alt={`Slide ${index}`} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}