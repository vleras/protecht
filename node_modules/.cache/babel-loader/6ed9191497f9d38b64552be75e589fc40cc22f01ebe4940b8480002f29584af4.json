{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PULSE Electronics\\\\protecht\\\\src\\\\pages\\\\ImageCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"../styles_css/Carousel.css\"; // Add custom styles for carousel\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carousel = ({\n  images\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const carouselRef = useRef(null);\n  useEffect(() => {\n    const carousel = carouselRef.current;\n    const handleScroll = () => {\n      const scrollWidth = carousel.scrollWidth; // Total width of the content\n      const visibleWidth = carousel.offsetWidth; // Width of the visible area\n\n      // Reset to the start when scrolling reaches the end\n      if (carousel.scrollLeft >= scrollWidth - visibleWidth) {\n        carousel.scrollLeft = 0;\n      }\n      // Reset to the end when scrolling reaches the start\n      if (carousel.scrollLeft === 0) {\n        carousel.scrollLeft = scrollWidth - visibleWidth;\n      }\n    };\n    carousel.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      carousel.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setStartX(e.pageX - carouselRef.current.offsetLeft);\n    setScrollLeft(carouselRef.current.scrollLeft);\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n    e.preventDefault();\n    const x = e.pageX - carouselRef.current.offsetLeft;\n    const walk = x - startX; // Distance dragged\n    carouselRef.current.scrollLeft = scrollLeft - walk;\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  const handleMouseLeave = () => {\n    setIsDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    ref: carouselRef,\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    children: images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-item\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: `Slide ${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"9PhckDFKRi105ih1gM8ostYnqsE=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Carousel","images","_s","isDragging","setIsDragging","startX","setStartX","scrollLeft","setScrollLeft","carouselRef","useEffect","carousel","current","handleScroll","scrollWidth","visibleWidth","offsetWidth","addEventListener","removeEventListener","handleMouseDown","e","pageX","offsetLeft","handleMouseMove","preventDefault","x","walk","handleMouseUp","handleMouseLeave","className","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","children","map","img","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PULSE Electronics/protecht/src/pages/ImageCarousel.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"../styles_css/Carousel.css\"; // Add custom styles for carousel\r\nconst Carousel = ({ images }) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [startX, setStartX] = useState(0);\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const carouselRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const carousel = carouselRef.current;\r\n\r\n    const handleScroll = () => {\r\n      const scrollWidth = carousel.scrollWidth; // Total width of the content\r\n      const visibleWidth = carousel.offsetWidth; // Width of the visible area\r\n\r\n      // Reset to the start when scrolling reaches the end\r\n      if (carousel.scrollLeft >= scrollWidth - visibleWidth) {\r\n        carousel.scrollLeft = 0;\r\n      }\r\n      // Reset to the end when scrolling reaches the start\r\n      if (carousel.scrollLeft === 0) {\r\n        carousel.scrollLeft = scrollWidth - visibleWidth;\r\n      }\r\n    };\r\n\r\n    carousel.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      carousel.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleMouseDown = (e) => {\r\n    setIsDragging(true);\r\n    setStartX(e.pageX - carouselRef.current.offsetLeft);\r\n    setScrollLeft(carouselRef.current.scrollLeft);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDragging) return;\r\n    e.preventDefault();\r\n    const x = e.pageX - carouselRef.current.offsetLeft;\r\n    const walk = x - startX; // Distance dragged\r\n    carouselRef.current.scrollLeft = scrollLeft - walk;\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"carousel\"\r\n      ref={carouselRef}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      {images.map((img, index) => (\r\n        <div className=\"carousel-item\" key={index}>\r\n          <img src={img} alt={`Slide ${index}`} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}