{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PULSE Electronics\\\\protecht\\\\src\\\\pages\\\\TestimonialSlider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport \"../styles_css/Testimonial.css\";\nimport BujarImage from \"../images/bujar.png\";\nimport YvonneImage from \"../images/yvonne.png\";\nimport ArberImage from \"../images/arber.png\";\nimport JohnImage from \"../images/bujar.png\"; // Add your fourth image\n\n// const testimonials = [\n//   {\n//     id: 1,\n//     name: \"Bujar Demolli\",\n//     role: \"CEO\",\n//     company: \"Dreilinden\",\n//     image: BujarImage,\n//     quote:\n//       \"Protecht has been a key partner in our digital transformation journey. Their expertise ensures our security and keeps us resilient in the fast-evolving digital landscape. With Protecht, we're prepared to face the challenges of today's digital world.\",\n//   },\n//   {\n//     id: 2,\n//     name: \"Yvonne Lang\",\n//     role: \"COO\",\n//     company: \"LFT\",\n//     image: YvonneImage,\n//     quote:\n//       \"The programming and IT security implemented by Protecht have significantly enhanced our daily operations. Thanks to their expertise, we've been upgraded to state-of-the-art technology, which has been a profound success in our work and overall journey.\",\n//   },\n//   {\n//     id: 3,\n//     name: \"Arber Arifi\",\n//     role: \"Chairman of the Board\",\n//     company: \"reYa\",\n//     image: ArberImage,\n//     quote:\n//       \"Protecht's expertise in AI and Cloud has been pivotal in transforming our datacenter into a green, AI-driven powerhouse. Their skills and dedication have been key to the success of our reYa cloud and AI datacenter, enabling us to meet the evolving challenges of modern technology.\",\n//   },\n//   {\n//     id: 4,\n//     name: \"John Smith\",\n//     role: \"CTO\",\n//     company: \"TechCorp\",\n//     image: JohnImage,\n//     quote:\n//       \"Working with Protecht has transformed our technological infrastructure. Their innovative solutions and dedicated support have helped us achieve new heights in our digital capabilities.\",\n//   },\n// ];\n// const Testimonials = () => {\n//   const [currentIndex, setCurrentIndex] = useState(1); // Start from the first real slide\n//   const [isTransitioning, setIsTransitioning] = useState(false);\n\n//   const gridWidth = `${(testimonials.length + 2) * 100}%`; // Adjust for clones\n\n//   const nextSlide = () => {\n//     if (!isTransitioning) {\n//       setIsTransitioning(true);\n//       setCurrentIndex((prevIndex) => prevIndex + 1);\n//     }\n//   };\n\n//   const prevSlide = () => {\n//     if (!isTransitioning) {\n//       setIsTransitioning(true);\n//       setCurrentIndex((prevIndex) => prevIndex - 1);\n//     }\n//   };\n\n//   useEffect(() => {\n//     const interval = setInterval(nextSlide, 5000); // Auto-slide every 5 seconds\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   useEffect(() => {\n//     // Handle infinite loop adjustment\n//     if (isTransitioning) {\n//       const timeout = setTimeout(() => {\n//         setIsTransitioning(false);\n//         if (currentIndex === 0) {\n//           setCurrentIndex(testimonials.length);\n//         } else if (currentIndex === testimonials.length + 1) {\n//           setCurrentIndex(1);\n//         }\n//       }, 500); // Match the transition duration in CSS\n//       return () => clearTimeout(timeout);\n//     }\n//   }, [currentIndex, isTransitioning]);\n\n//   const handleDrag = (e) => {\n//     // Implement dragging logic\n//     // Capture start and end positions and adjust the index based on direction\n//   };\n\n//   const clonedTestimonials = [\n//     testimonials[testimonials.length - 1], // Last slide as the first clone\n//     ...testimonials,\n//     testimonials[0], // First slide as the last clone\n//   ];\n\n//   return (\n//     <div\n//       className=\"container2\"\n//       onMouseDown={handleDrag}\n//       onTouchStart={handleDrag}\n//     >\n//       <div className=\"slider-header\">\n//         <h2 className=\"slider-title\">\n//           Hear from our <span className=\"title-highlight\">customers</span>\n//         </h2>\n//         <div className=\"button-group\">\n//           <button\n//             onClick={prevSlide}\n//             className=\"navigation-button\"\n//             aria-label=\"Previous testimonial\"\n//           >\n//             <ChevronLeft className=\"navigation-icon\" />\n//           </button>\n//           <button\n//             onClick={nextSlide}\n//             className=\"navigation-button\"\n//             aria-label=\"Next testimonial\"\n//           >\n//             <ChevronRight className=\"navigation-icon\" />\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"testimonial-wrapper\">\n//         <div\n//           className=\"testimonial-grid\"\n//           style={{\n//             width: gridWidth, // Dynamically calculated width\n//             transform: `translateX(-${currentIndex * (100 / 3)}%)`,\n//             transition: isTransitioning ? \"transform 0.5s ease\" : \"none\",\n//           }}\n//         >\n//           {clonedTestimonials.map((testimonial, index) => (\n//             <div key={index} className=\"testimonial-card\">\n//               <div className=\"testimonial-header\">\n//                 <img\n//                   src={testimonial.image}\n//                   alt={testimonial.name}\n//                   className=\"testimonial-image\"\n//                 />\n//                 <div>\n//                   <h3 className=\"testimonial-name\">{testimonial.name}</h3>\n//                   <p className=\"testimonial-role\">\n//                     {testimonial.role} at {testimonial.company}\n//                   </p>\n//                 </div>\n//               </div>\n//               <p className=\"testimonial-quote\">\"{testimonial.quote}\"</p>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Testimonials;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testimonials = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(1); // Start from the first real slide\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const gridWidth = `${(testimonials.length + 2) * 100}%`; // Adjust for clones\n\n  const nextSlide = () => {\n    if (!isTransitioning) {\n      setIsTransitioning(true);\n      setCurrentIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  const prevSlide = () => {\n    if (!isTransitioning) {\n      setIsTransitioning(true);\n      setCurrentIndex(prevIndex => prevIndex - 1);\n    }\n  };\n  useEffect(() => {\n    const interval = setInterval(nextSlide, 5000); // Auto-slide every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    // Handle infinite loop adjustment\n    if (isTransitioning) {\n      const timeout = setTimeout(() => {\n        setIsTransitioning(false);\n        if (currentIndex === 0) {\n          setCurrentIndex(testimonials.length); // Jump to the last real slide\n        } else if (currentIndex === testimonials.length + 1) {\n          setCurrentIndex(1); // Jump to the first real slide\n        }\n      }, 500); // Match the transition duration in CSS\n      return () => clearTimeout(timeout);\n    }\n  }, [currentIndex, isTransitioning]);\n  const clonedTestimonials = [testimonials[testimonials.length - 1],\n  // Last slide as the first clone\n  ...testimonials, testimonials[0] // First slide as the last clone\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"slider-title\",\n        children: [\"Hear from our \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title-highlight\",\n          children: \"customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prevSlide,\n          className: \"navigation-button\",\n          \"aria-label\": \"Previous testimonial\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n            className: \"navigation-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextSlide,\n          className: \"navigation-button\",\n          \"aria-label\": \"Next testimonial\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n            className: \"navigation-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testimonial-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testimonial-grid\",\n        style: {\n          width: gridWidth,\n          // Dynamically calculated width\n          transform: `translateX(-${currentIndex * (100 / 3)}%)`,\n          transition: isTransitioning ? \"transform 0.5s ease\" : \"none\"\n        },\n        children: clonedTestimonials.map((testimonial, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testimonial-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"testimonial-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: testimonial.image,\n              alt: testimonial.name,\n              className: \"testimonial-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"testimonial-name\",\n                children: testimonial.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"testimonial-role\",\n                children: [testimonial.role, \" at \", testimonial.company]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"testimonial-quote\",\n            children: [\"\\\"\", testimonial.quote, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Testimonials, \"EO3d7cPk+CEz0k/VxApOt/irnMw=\");\n_c = Testimonials;\nexport default Testimonials;\nvar _c;\n$RefreshReg$(_c, \"Testimonials\");","map":{"version":3,"names":["React","useState","useEffect","ChevronLeft","ChevronRight","BujarImage","YvonneImage","ArberImage","JohnImage","jsxDEV","_jsxDEV","Testimonials","_s","currentIndex","setCurrentIndex","isTransitioning","setIsTransitioning","gridWidth","testimonials","length","nextSlide","prevIndex","prevSlide","interval","setInterval","clearInterval","timeout","setTimeout","clearTimeout","clonedTestimonials","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","transform","transition","map","testimonial","index","src","image","alt","name","role","company","quote","_c","$RefreshReg$"],"sources":["C:/Users/PULSE Electronics/protecht/src/pages/TestimonialSlider.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport \"../styles_css/Testimonial.css\";\r\nimport BujarImage from \"../images/bujar.png\";\r\nimport YvonneImage from \"../images/yvonne.png\";\r\nimport ArberImage from \"../images/arber.png\";\r\nimport JohnImage from \"../images/bujar.png\"; // Add your fourth image\r\n\r\n// const testimonials = [\r\n//   {\r\n//     id: 1,\r\n//     name: \"Bujar Demolli\",\r\n//     role: \"CEO\",\r\n//     company: \"Dreilinden\",\r\n//     image: BujarImage,\r\n//     quote:\r\n//       \"Protecht has been a key partner in our digital transformation journey. Their expertise ensures our security and keeps us resilient in the fast-evolving digital landscape. With Protecht, we're prepared to face the challenges of today's digital world.\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"Yvonne Lang\",\r\n//     role: \"COO\",\r\n//     company: \"LFT\",\r\n//     image: YvonneImage,\r\n//     quote:\r\n//       \"The programming and IT security implemented by Protecht have significantly enhanced our daily operations. Thanks to their expertise, we've been upgraded to state-of-the-art technology, which has been a profound success in our work and overall journey.\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"Arber Arifi\",\r\n//     role: \"Chairman of the Board\",\r\n//     company: \"reYa\",\r\n//     image: ArberImage,\r\n//     quote:\r\n//       \"Protecht's expertise in AI and Cloud has been pivotal in transforming our datacenter into a green, AI-driven powerhouse. Their skills and dedication have been key to the success of our reYa cloud and AI datacenter, enabling us to meet the evolving challenges of modern technology.\",\r\n//   },\r\n//   {\r\n//     id: 4,\r\n//     name: \"John Smith\",\r\n//     role: \"CTO\",\r\n//     company: \"TechCorp\",\r\n//     image: JohnImage,\r\n//     quote:\r\n//       \"Working with Protecht has transformed our technological infrastructure. Their innovative solutions and dedicated support have helped us achieve new heights in our digital capabilities.\",\r\n//   },\r\n// ];\r\n// const Testimonials = () => {\r\n//   const [currentIndex, setCurrentIndex] = useState(1); // Start from the first real slide\r\n//   const [isTransitioning, setIsTransitioning] = useState(false);\r\n\r\n//   const gridWidth = `${(testimonials.length + 2) * 100}%`; // Adjust for clones\r\n\r\n//   const nextSlide = () => {\r\n//     if (!isTransitioning) {\r\n//       setIsTransitioning(true);\r\n//       setCurrentIndex((prevIndex) => prevIndex + 1);\r\n//     }\r\n//   };\r\n\r\n//   const prevSlide = () => {\r\n//     if (!isTransitioning) {\r\n//       setIsTransitioning(true);\r\n//       setCurrentIndex((prevIndex) => prevIndex - 1);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const interval = setInterval(nextSlide, 5000); // Auto-slide every 5 seconds\r\n//     return () => clearInterval(interval);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // Handle infinite loop adjustment\r\n//     if (isTransitioning) {\r\n//       const timeout = setTimeout(() => {\r\n//         setIsTransitioning(false);\r\n//         if (currentIndex === 0) {\r\n//           setCurrentIndex(testimonials.length);\r\n//         } else if (currentIndex === testimonials.length + 1) {\r\n//           setCurrentIndex(1);\r\n//         }\r\n//       }, 500); // Match the transition duration in CSS\r\n//       return () => clearTimeout(timeout);\r\n//     }\r\n//   }, [currentIndex, isTransitioning]);\r\n\r\n//   const handleDrag = (e) => {\r\n//     // Implement dragging logic\r\n//     // Capture start and end positions and adjust the index based on direction\r\n//   };\r\n\r\n//   const clonedTestimonials = [\r\n//     testimonials[testimonials.length - 1], // Last slide as the first clone\r\n//     ...testimonials,\r\n//     testimonials[0], // First slide as the last clone\r\n//   ];\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"container2\"\r\n//       onMouseDown={handleDrag}\r\n//       onTouchStart={handleDrag}\r\n//     >\r\n//       <div className=\"slider-header\">\r\n//         <h2 className=\"slider-title\">\r\n//           Hear from our <span className=\"title-highlight\">customers</span>\r\n//         </h2>\r\n//         <div className=\"button-group\">\r\n//           <button\r\n//             onClick={prevSlide}\r\n//             className=\"navigation-button\"\r\n//             aria-label=\"Previous testimonial\"\r\n//           >\r\n//             <ChevronLeft className=\"navigation-icon\" />\r\n//           </button>\r\n//           <button\r\n//             onClick={nextSlide}\r\n//             className=\"navigation-button\"\r\n//             aria-label=\"Next testimonial\"\r\n//           >\r\n//             <ChevronRight className=\"navigation-icon\" />\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"testimonial-wrapper\">\r\n//         <div\r\n//           className=\"testimonial-grid\"\r\n//           style={{\r\n//             width: gridWidth, // Dynamically calculated width\r\n//             transform: `translateX(-${currentIndex * (100 / 3)}%)`,\r\n//             transition: isTransitioning ? \"transform 0.5s ease\" : \"none\",\r\n//           }}\r\n//         >\r\n//           {clonedTestimonials.map((testimonial, index) => (\r\n//             <div key={index} className=\"testimonial-card\">\r\n//               <div className=\"testimonial-header\">\r\n//                 <img\r\n//                   src={testimonial.image}\r\n//                   alt={testimonial.name}\r\n//                   className=\"testimonial-image\"\r\n//                 />\r\n//                 <div>\r\n//                   <h3 className=\"testimonial-name\">{testimonial.name}</h3>\r\n//                   <p className=\"testimonial-role\">\r\n//                     {testimonial.role} at {testimonial.company}\r\n//                   </p>\r\n//                 </div>\r\n//               </div>\r\n//               <p className=\"testimonial-quote\">\"{testimonial.quote}\"</p>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Testimonials;\r\n\r\nconst Testimonials = () => {\r\n  const [currentIndex, setCurrentIndex] = useState(1); // Start from the first real slide\r\n  const [isTransitioning, setIsTransitioning] = useState(false);\r\n\r\n  const gridWidth = `${(testimonials.length + 2) * 100}%`; // Adjust for clones\r\n\r\n  const nextSlide = () => {\r\n    if (!isTransitioning) {\r\n      setIsTransitioning(true);\r\n      setCurrentIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    if (!isTransitioning) {\r\n      setIsTransitioning(true);\r\n      setCurrentIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(nextSlide, 5000); // Auto-slide every 5 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Handle infinite loop adjustment\r\n    if (isTransitioning) {\r\n      const timeout = setTimeout(() => {\r\n        setIsTransitioning(false);\r\n        if (currentIndex === 0) {\r\n          setCurrentIndex(testimonials.length); // Jump to the last real slide\r\n        } else if (currentIndex === testimonials.length + 1) {\r\n          setCurrentIndex(1); // Jump to the first real slide\r\n        }\r\n      }, 500); // Match the transition duration in CSS\r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [currentIndex, isTransitioning]);\r\n\r\n  const clonedTestimonials = [\r\n    testimonials[testimonials.length - 1], // Last slide as the first clone\r\n    ...testimonials,\r\n    testimonials[0], // First slide as the last clone\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container2\">\r\n      <div className=\"slider-header\">\r\n        <h2 className=\"slider-title\">\r\n          Hear from our <span className=\"title-highlight\">customers</span>\r\n        </h2>\r\n        <div className=\"button-group\">\r\n          <button\r\n            onClick={prevSlide}\r\n            className=\"navigation-button\"\r\n            aria-label=\"Previous testimonial\"\r\n          >\r\n            <ChevronLeft className=\"navigation-icon\" />\r\n          </button>\r\n          <button\r\n            onClick={nextSlide}\r\n            className=\"navigation-button\"\r\n            aria-label=\"Next testimonial\"\r\n          >\r\n            <ChevronRight className=\"navigation-icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"testimonial-wrapper\">\r\n        <div\r\n          className=\"testimonial-grid\"\r\n          style={{\r\n            width: gridWidth, // Dynamically calculated width\r\n            transform: `translateX(-${currentIndex * (100 / 3)}%)`,\r\n            transition: isTransitioning ? \"transform 0.5s ease\" : \"none\",\r\n          }}\r\n        >\r\n          {clonedTestimonials.map((testimonial, index) => (\r\n            <div key={index} className=\"testimonial-card\">\r\n              <div className=\"testimonial-header\">\r\n                <img\r\n                  src={testimonial.image}\r\n                  alt={testimonial.name}\r\n                  className=\"testimonial-image\"\r\n                />\r\n                <div>\r\n                  <h3 className=\"testimonial-name\">{testimonial.name}</h3>\r\n                  <p className=\"testimonial-role\">\r\n                    {testimonial.role} at {testimonial.company}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <p className=\"testimonial-quote\">\"{testimonial.quote}\"</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Testimonials;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,YAAY,QAAQ,cAAc;AACxD,OAAO,+BAA+B;AACtC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,SAAS,MAAM,qBAAqB,CAAC,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMgB,SAAS,GAAG,GAAG,CAACC,YAAY,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}