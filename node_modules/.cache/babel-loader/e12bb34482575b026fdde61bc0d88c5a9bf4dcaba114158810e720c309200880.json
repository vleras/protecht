{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport \"../styles_css/Testimonial.css\";\nimport BujarImage from \"../images/bujar.png\";\nimport YvonneImage from \"../images/yvonne.png\";\nimport ArberImage from \"../images/arber.png\";\nimport JohnImage from \"../images/bujar.png\"; // Add your fourth image\n\nconst testimonials = [{\n  id: 1,\n  name: \"Bujar Demolli\",\n  role: \"CEO\",\n  company: \"Dreilinden\",\n  image: BujarImage,\n  quote: \"Protecht has been a key partner in our digital transformation journey. Their expertise ensures our security and keeps us resilient in the fast-evolving digital landscape. With Protecht, we're prepared to face the challenges of today's digital world.\"\n}, {\n  id: 2,\n  name: \"Yvonne Lang\",\n  role: \"COO\",\n  company: \"LFT\",\n  image: YvonneImage,\n  quote: \"The programming and IT security implemented by Protecht have significantly enhanced our daily operations. Thanks to their expertise, we've been upgraded to state-of-the-art technology, which has been a profound success in our work and overall journey.\"\n}, {\n  id: 3,\n  name: \"Arber Arifi\",\n  role: \"Chairman of the Board\",\n  company: \"reYa\",\n  image: ArberImage,\n  quote: \"Protecht's expertise in AI and Cloud has been pivotal in transforming our datacenter into a green, AI-driven powerhouse. Their skills and dedication have been key to the success of our reYa cloud and AI datacenter, enabling us to meet the evolving challenges of modern technology.\"\n}, {\n  id: 4,\n  name: \"John Smith\",\n  role: \"CTO\",\n  company: \"TechCorp\",\n  image: JohnImage,\n  quote: \"Working with Protecht has transformed our technological infrastructure. Their innovative solutions and dedicated support have helped us achieve new heights in our digital capabilities.\"\n}];\n\n// const Testimonials = () => {\n//   const [currentIndex, setCurrentIndex] = useState(testimonials.length); // Start at the first real slide\n//   const [isTransitioning, setIsTransitioning] = useState(false);\n\n//   // Duplicate the slides for seamless looping\n//   const clonedTestimonials = [\n//     ...testimonials,\n//     ...testimonials,\n//     ...testimonials,\n//   ];\n\n//   const slideWidth = 100 / testimonials.length;\n\n//   const handleNext = () => {\n//     if (!isTransitioning) {\n//       setIsTransitioning(true);\n//       setCurrentIndex((prevIndex) => prevIndex + 1);\n//     }\n//   };\n\n//   const handlePrev = () => {\n//     if (!isTransitioning) {\n//       setIsTransitioning(true);\n//       setCurrentIndex((prevIndex) => prevIndex - 1);\n//     }\n//   };\n\n//   const handleTransitionEnd = () => {\n//     setIsTransitioning(false);\n//     if (currentIndex >= testimonials.length * 2) {\n//       // Reset to the first real set of slides\n//       setCurrentIndex(testimonials.length);\n//     } else if (currentIndex < testimonials.length) {\n//       // Reset to the last real set of slides\n//       setCurrentIndex(testimonials.length * 2 - 1);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container2\">\n//       <div className=\"slider-header\">\n//         <h2 className=\"slider-title\">\n//           Hear from our <span className=\"title-highlight\">customers</span>\n//         </h2>\n//         <div className=\"button-group\">\n//           <button onClick={handlePrev} className=\"navigation-button\">\n//             <ChevronLeft className=\"navigation-icon\" />\n//           </button>\n//           <button onClick={handleNext} className=\"navigation-button\">\n//             <ChevronRight className=\"navigation-icon\" />\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"testimonial-wrapper\">\n//         <div\n//           className=\"testimonial-grid\"\n//           style={{\n//             transform: `translateX(-${currentIndex * slideWidth}%)`,\n//             transition: isTransitioning ? \"transform 0.5s ease\" : \"none\",\n//           }}\n//           onTransitionEnd={handleTransitionEnd}\n//         >\n//           {clonedTestimonials.map((testimonial, index) => (\n//             <div key={index} className=\"testimonial-card\">\n//               <div className=\"testimonial-header\">\n//                 <img\n//                   src={testimonial.image}\n//                   alt={testimonial.name}\n//                   className=\"testimonial-image\"\n//                 />\n//                 <div>\n//                   <h3 className=\"testimonial-name\">{testimonial.name}</h3>\n//                   <p className=\"testimonial-role\">\n//                     {testimonial.role} at {testimonial.company}\n//                   </p>\n//                 </div>\n//               </div>\n//               <p className=\"testimonial-quote\">\"{testimonial.quote}\"</p>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\nexport default Testimonials;","map":{"version":3,"names":["React","useState","useEffect","ChevronLeft","ChevronRight","BujarImage","YvonneImage","ArberImage","JohnImage","testimonials","id","name","role","company","image","quote","Testimonials"],"sources":["C:/Users/PULSE Electronics/protecht/src/pages/TestimonialSlider.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport \"../styles_css/Testimonial.css\";\r\nimport BujarImage from \"../images/bujar.png\";\r\nimport YvonneImage from \"../images/yvonne.png\";\r\nimport ArberImage from \"../images/arber.png\";\r\nimport JohnImage from \"../images/bujar.png\"; // Add your fourth image\r\n\r\nconst testimonials = [\r\n  {\r\n    id: 1,\r\n    name: \"Bujar Demolli\",\r\n    role: \"CEO\",\r\n    company: \"Dreilinden\",\r\n    image: BujarImage,\r\n    quote:\r\n      \"Protecht has been a key partner in our digital transformation journey. Their expertise ensures our security and keeps us resilient in the fast-evolving digital landscape. With Protecht, we're prepared to face the challenges of today's digital world.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Yvonne Lang\",\r\n    role: \"COO\",\r\n    company: \"LFT\",\r\n    image: YvonneImage,\r\n    quote:\r\n      \"The programming and IT security implemented by Protecht have significantly enhanced our daily operations. Thanks to their expertise, we've been upgraded to state-of-the-art technology, which has been a profound success in our work and overall journey.\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Arber Arifi\",\r\n    role: \"Chairman of the Board\",\r\n    company: \"reYa\",\r\n    image: ArberImage,\r\n    quote:\r\n      \"Protecht's expertise in AI and Cloud has been pivotal in transforming our datacenter into a green, AI-driven powerhouse. Their skills and dedication have been key to the success of our reYa cloud and AI datacenter, enabling us to meet the evolving challenges of modern technology.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"John Smith\",\r\n    role: \"CTO\",\r\n    company: \"TechCorp\",\r\n    image: JohnImage,\r\n    quote:\r\n      \"Working with Protecht has transformed our technological infrastructure. Their innovative solutions and dedicated support have helped us achieve new heights in our digital capabilities.\",\r\n  },\r\n];\r\n\r\n// const Testimonials = () => {\r\n//   const [currentIndex, setCurrentIndex] = useState(testimonials.length); // Start at the first real slide\r\n//   const [isTransitioning, setIsTransitioning] = useState(false);\r\n\r\n//   // Duplicate the slides for seamless looping\r\n//   const clonedTestimonials = [\r\n//     ...testimonials,\r\n//     ...testimonials,\r\n//     ...testimonials,\r\n//   ];\r\n\r\n//   const slideWidth = 100 / testimonials.length;\r\n\r\n//   const handleNext = () => {\r\n//     if (!isTransitioning) {\r\n//       setIsTransitioning(true);\r\n//       setCurrentIndex((prevIndex) => prevIndex + 1);\r\n//     }\r\n//   };\r\n\r\n//   const handlePrev = () => {\r\n//     if (!isTransitioning) {\r\n//       setIsTransitioning(true);\r\n//       setCurrentIndex((prevIndex) => prevIndex - 1);\r\n//     }\r\n//   };\r\n\r\n//   const handleTransitionEnd = () => {\r\n//     setIsTransitioning(false);\r\n//     if (currentIndex >= testimonials.length * 2) {\r\n//       // Reset to the first real set of slides\r\n//       setCurrentIndex(testimonials.length);\r\n//     } else if (currentIndex < testimonials.length) {\r\n//       // Reset to the last real set of slides\r\n//       setCurrentIndex(testimonials.length * 2 - 1);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container2\">\r\n//       <div className=\"slider-header\">\r\n//         <h2 className=\"slider-title\">\r\n//           Hear from our <span className=\"title-highlight\">customers</span>\r\n//         </h2>\r\n//         <div className=\"button-group\">\r\n//           <button onClick={handlePrev} className=\"navigation-button\">\r\n//             <ChevronLeft className=\"navigation-icon\" />\r\n//           </button>\r\n//           <button onClick={handleNext} className=\"navigation-button\">\r\n//             <ChevronRight className=\"navigation-icon\" />\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"testimonial-wrapper\">\r\n//         <div\r\n//           className=\"testimonial-grid\"\r\n//           style={{\r\n//             transform: `translateX(-${currentIndex * slideWidth}%)`,\r\n//             transition: isTransitioning ? \"transform 0.5s ease\" : \"none\",\r\n//           }}\r\n//           onTransitionEnd={handleTransitionEnd}\r\n//         >\r\n//           {clonedTestimonials.map((testimonial, index) => (\r\n//             <div key={index} className=\"testimonial-card\">\r\n//               <div className=\"testimonial-header\">\r\n//                 <img\r\n//                   src={testimonial.image}\r\n//                   alt={testimonial.name}\r\n//                   className=\"testimonial-image\"\r\n//                 />\r\n//                 <div>\r\n//                   <h3 className=\"testimonial-name\">{testimonial.name}</h3>\r\n//                   <p className=\"testimonial-role\">\r\n//                     {testimonial.role} at {testimonial.company}\r\n//                   </p>\r\n//                 </div>\r\n//               </div>\r\n//               <p className=\"testimonial-quote\">\"{testimonial.quote}\"</p>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default Testimonials;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,YAAY,QAAQ,cAAc;AACxD,OAAO,+BAA+B;AACtC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,SAAS,MAAM,qBAAqB,CAAC,CAAC;;AAE7C,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE,YAAY;EACrBC,KAAK,EAAET,UAAU;EACjBU,KAAK,EACH;AACJ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAER,WAAW;EAClBS,KAAK,EACH;AACJ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,uBAAuB;EAC7BC,OAAO,EAAE,MAAM;EACfC,KAAK,EAAEP,UAAU;EACjBQ,KAAK,EACH;AACJ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE,UAAU;EACnBC,KAAK,EAAEN,SAAS;EAChBO,KAAK,EACH;AACJ,CAAC,CACF;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}